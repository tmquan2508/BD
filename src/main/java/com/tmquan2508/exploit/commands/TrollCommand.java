package com.tmquan2508.exploit.commands;

import com.tmquan2508.exploit.Exploit;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;

public class TrollCommand extends Command {
    public TrollCommand() { super(); }
    @Override public String getName() { return "troll"; }
    @Override public String getDescription() { return "Toggles various troll effects on a player."; }
    @Override public String getUsage() { return "<method> <player>"; }
    @Override public int getRequirePerm() { return 2; }
    @Override public void execute(Player sender, String[] args) {
        if (args.length < 2) { Exploit.sender.sendError(sender, Exploit.helpers.getRequiredUsage(this)); return; }
        String method = args[0].toLowerCase();
        Player target = Bukkit.getPlayer(args[1]);
        if (target == null) { Exploit.sender.sendError(sender, "Player not found: " + args[1]); return; }

        if (method.equalsIgnoreCase("reset")) {
            Exploit.clearState(Exploit.playerStates, target.getName());
            Exploit.sender.sendMessage(sender, "Reset all troll states for " + target.getName());
            return;
        }
        try {
            Exploit.State trollState = Exploit.State.valueOf("MF_" + method.toUpperCase());
            boolean isEnabled = Exploit.getState(Exploit.playerStates, target.getName(), trollState);
            Exploit.setState(Exploit.playerStates, target.getName(), trollState, !isEnabled);
            Exploit.sender.sendMessage(sender, "Troll method '" + method + "' " + (!isEnabled ? "enabled" : "disabled") + " for " + target.getName());
        } catch (IllegalArgumentException e) {
            Exploit.sender.sendError(sender, "Invalid troll method. Options: thrower, interact, cripple, flight, inventory, drop, teleport, mine, place, login, god, damage, or reset.");
        }
    }
}