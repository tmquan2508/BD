import com.tmquan2508.buildtools.GenerateBinaryPayloadTask;

plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id("com.gradleup.shadow") version "9.0.0-rc2"
}

group = 'com.tmquan2508'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.19-R0.1-SNAPSHOT")
    compileOnly("org.apache.logging.log4j:log4j-api:2.17.1")
    compileOnly("org.apache.logging.log4j:log4j-core:2.17.1")
    implementation("org.javassist:javassist:3.29.0-GA")
    compileOnly("org.yaml:snakeyaml:2.0")
    compileOnly("org.apache.commons:commons-lang3:3.12.0")
}

task generateBinaryPayload(type: GenerateBinaryPayloadTask) {
    group = 'build'
    description = 'Converts openbd.txt into a binary data.bin payload.'
    inputFile = rootProject.file('buildSrc/src/main/resources/openbd.txt')
    outputFile = layout.buildDirectory.file('generated/payload/META-INF/data.bin')
}

tasks {
    runServer {
        minecraftVersion("1.21")
    }
}

tasks.shadowJar {
    relocate('javassist', 'com.tmquan2508.exploit.javassist')
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

sourceSets.main.resources {
    srcDir layout.buildDirectory.dir('generated/payload')
}

processResources {
    dependsOn generateBinaryPayload

    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

build {
    dependsOn shadowJar
}

artifacts {
    archives shadowJar
}