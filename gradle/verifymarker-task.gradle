task verifyMarker {
    dependsOn markJarWithFakeCRC
    doLast {
        def shadowJarTask = tasks.named('shadowJar').get()
        def shadowJarFile = shadowJarTask.archiveFile.get().asFile
        
        if (!shadowJarFile.exists()) {
            throw new GradleException("JAR file not found for verification: $shadowJarFile")
        }
        
        def markerString = "openbd.injected"
        def crc = new java.util.zip.CRC32()
        crc.update(markerString.getBytes())
        def expectedCrc = crc.getValue()
        
        def formatHex = { long value ->
            return String.format("%08x", value & 0xFFFFFFFFL)
        }
        
        println "Verifying marker in file: ${shadowJarFile.name}"
        println "Expected CRC value for 'plugin.yml': 0x${formatHex(expectedCrc)}\n"
        
        def zipFile = null
        try {
            zipFile = new java.util.zip.ZipFile(shadowJarFile)
            def entry = zipFile.getEntry("plugin.yml")
            
            if (entry == null) {
                throw new GradleException("❌ FAILED! 'plugin.yml' not found in the archive.")
            }
            
            def storedCrc = entry.getCrc()
            println "- Found 'plugin.yml'."
            println "  CRC stored in metadata: 0x${formatHex(storedCrc)}"
            
            if (storedCrc == expectedCrc) {
                println "\n✅ SUCCESS! 'plugin.yml' CRC matches the expected marker value."
            } else {
                throw new GradleException(
                    "\n❌ FAILED! 'plugin.yml' CRC (0x${formatHex(storedCrc)}) " +
                    "does not match the expected marker value (0x${formatHex(expectedCrc)})."
                )
            }
        } finally {
            if (zipFile != null) {
                zipFile.close()
            }
        }
    }
}
